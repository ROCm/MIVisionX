language: cpp
sudo: required
dist: xenial
os:
  - linux
compiler:
  - g++
  
services:
  - docker

branches:
  - master

install:
  - sudo apt update
  - lscpu
  #- sudo apt --yes install cmake git wget unzip libnuma-dev
  #- wget -qO - http://repo.radeon.com/rocm/apt/debian/rocm.gpg.key | sudo apt-key add -
  #- sudo sh -c 'echo deb [arch=amd64] http://repo.radeon.com/rocm/apt/debian/ xenial main > /etc/apt/sources.list.d/rocm.list'
  #- sudo apt update
  #- sudo apt install rocm-dkms

before_script:
  - docker pull kiritigowda/ubuntu-18.04:mivisionx-level-1
  - docker run -it -d --name mivisionx-1 --network host kiritigowda/ubuntu-18.04:mivisionx-level-1 bash
  - docker cp ../MIVisionX mivisionx-1:/MIVisionX
  - docker pull kiritigowda/ubuntu-18.04:mivisionx-level-2
  - docker run -it -d --name mivisionx-2 --network host kiritigowda/ubuntu-18.04:mivisionx-level-2 bash
  - docker cp ../MIVisionX mivisionx-2:/MIVisionX
  - docker pull kiritigowda/ubuntu-18.04:mivisionx-level-3
  - docker run -it -d --name mivisionx-3 --network host kiritigowda/ubuntu-18.04:mivisionx-level-3 bash
  - docker cp ../MIVisionX mivisionx-3:/MIVisionX
  - docker pull kiritigowda/ubuntu-18.04:mivisionx-level-4
  - docker run -it -d --name mivisionx-4 --network host kiritigowda/ubuntu-18.04:mivisionx-level-4 bash
  - docker cp ../MIVisionX mivisionx-4:/MIVisionX
  - docker pull kiritigowda/ubuntu-18.04:mivisionx-level-5
  - docker run -it -d --name mivisionx-5 --network host kiritigowda/ubuntu-18.04:mivisionx-level-5 bash
  - docker cp ../MIVisionX mivisionx-5:/MIVisionX

script:
  # Level 1 - [cmake gcc g++] - CPU Only OpenVX
  - docker exec mivisionx-1 cmake -H/MIVisionX -B/_build -DCMAKE_BUILD_TYPE=Release
  - docker exec mivisionx-1 cmake --build /_build --clean-first -- -j8
  # Level 2 - [ROCm OpenCL + Level 1] - CPU + OpenCL Components
  - docker exec mivisionx-2 cmake -H/MIVisionX -B/_build -DCMAKE_BUILD_TYPE=Release
  - docker exec mivisionx-2 cmake --build /_build --clean-first -- -j8
  # Level 3 - [OpenCV FFMPEG + Level 2] - CPU + OpenCL Components + OpenCV EXT + amd_media
  - docker exec mivisionx-3 cmake -H/MIVisionX -B/_build -DCMAKE_BUILD_TYPE=Release
  - docker exec mivisionx-3 cmake --build /_build --clean-first -- -j8
  # Level 4 - [MIOpenGEMM MIOpen ProtoBuf + Level 3] - CPU + OpenCL Components + OpenCV EXT + amd_media + Neural Net Components
  - docker exec mivisionx-4 cmake -H/MIVisionX -B/_build -DCMAKE_BUILD_TYPE=Release
  - docker exec mivisionx-4 cmake --build /_build --clean-first -- -j8
  # Level 5 - [AMD_RPP RALI Deps + Level 4] - CPU + OpenCL Components + OpenCV EXT + amd_media + Neural Net Components + RALI
  - docker exec mivisionx-5 cmake -H/MIVisionX -B/_build -DCMAKE_BUILD_TYPE=Release
  - docker exec mivisionx-5 cmake --build /_build --clean-first -- -j8

after_success:

notifications:
  email:
    - kiriti.nageshgowda@amd.com
    - pavel.tcherniaev@amd.com


cmake_minimum_required (VERSION 3.1)
project (annmodule)
set (CMAKE_CXX_STANDARD 14)
list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
find_package(OpenCL REQUIRED)
find_package(OpenCV QUIET)
include_directories (${OpenCL_INCLUDE_DIRS} ${OpenCL_INCLUDE_DIRS}/Headers )
include_directories (/opt/rocm/include)
link_directories    (/opt/rocm/lib)
list(APPEND SOURCES annmodule.cpp)
add_library(${PROJECT_NAME} SHARED ${SOURCES})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse4.2 -std=c++11")
target_link_libraries(${PROJECT_NAME} openvx vx_nn pthread)

set(TARGET_CPP Argmax.cpp VXtensor.cpp DGtest.cpp)
add_executable(DGTest main.cpp ${TARGET_CPP})
if (OpenCV_FOUND)
  target_compile_definitions(DGTest PUBLIC ENABLE_OPENCV=1)
  include_directories(${OpenCV_INCLUDE_DIRS})
  target_link_libraries(DGTest ${OpenCV_LIBRARIES})
else(OpenCV_FOUND)
  target_compile_definitions(DGTest PUBLIC ENABLE_OPENCV=0)
endif(OpenCV_FOUND)
target_link_libraries(DGTest openvx vx_nn pthread ${PROJECT_NAME})
